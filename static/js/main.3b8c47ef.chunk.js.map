{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageError/Cat-cry.jpg","components/ImageError/ImageError.jsx","components/Modal/Modal.jsx","components/ApiService/ApiService.jsx","components/App/App.jsx","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSabmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","name","placeholder","onChange","Component","Button","onClick","ImageGalleryItem","image","largeImg","webformatURL","tags","src","alt","ImageGallery","images","map","largeImageURL","id","ImageError","message","role","errorImage","width","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBlackDropClick","target","window","addEventListener","removeEventListener","createPortal","children","API_KEY","BASE_URL","ApiService","page","status","handlerClickImage","url","fetchImage","fetch","then","response","ok","json","data","hits","Promise","reject","Error","result","prevState","length","catch","finally","myScroll","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","color","height","timeout","App","handleSearchFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b8c47ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import PropTypes from 'prop-types';\n\nexport class Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSabmit = event => {\n    event.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast.error('Enter a name for the picture!');\n      return;\n    }\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSabmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"imageName\"\n            // autocomplete=\"off\"\n            // autofocus\n            placeholder=\"Search images and photos\"\n            value={this.state.imageName}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <>\n      <button className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ image, largeImg }) => {\n  const { webformatURL, tags } = image;\n  return (\n    <li onClick={largeImg} className=\"ImageGalleryItem\">\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  largeImg: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nexport class ImageGallery extends Component {\n  render() {\n    const { images, largeImg } = this.props;\n\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {images.map(image => {\n            return (\n              <ImageGalleryItem\n                key={image.id}\n                image={image}\n                largeImg={() => {\n                  largeImg(image.largeImageURL);\n                }}\n              />\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  largeImg: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      // key: PropTypes.number.isRequired,\n      // largeImg: PropTypes.string.isRequired,\n      // image: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGallery;\n","export default __webpack_public_path__ + \"static/media/Cat-cry.554e214c.jpg\";","import React from 'react';\nimport errorImage from './Cat-cry.jpg';\nimport './ImageError.scss';\nimport PropTypes from 'prop-types';\n\nconst ImageError = ({ message }) => {\n  return (\n    <div role=\"alert\" className=\"image-error\">\n      <img src={errorImage} width=\"240\" alt=\"Cat-cry\" />\n      <p>{message}</p>\n    </div>\n  );\n};\n\nImageError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImageError;\n","import React, { Component } from 'react';\n// import PropTypes from \"prop-types\";\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  state = {};\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleBlackDropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBlackDropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nModal.propTypes = {\n  // onClick: PropTypes.func.isRequired,\n};\nexport default Modal;\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Button from '../Button/Button';\nimport ImageGallery from '../ImageGallery';\nimport ImageError from '../ImageError';\nimport Modal from '../Modal';\n\nconst API_KEY = '21988624-a694c57feb3b9caad270c2fa0';\nconst BASE_URL = 'https://pixabay.com/api';\n\nexport class ApiService extends Component {\n  state = {\n    images: [],\n    error: null,\n    largeImg: null,\n    page: 1,\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n    if (prevName !== nextName) {\n      this.setState({ status: 'pending', images: [], page: 1 });\n      this.fetchImage();\n    }\n  }\n\n  handlerClickImage = url => {\n    return this.setState({ largeImg: url });\n  };\n\n  fetchImage = () => {\n    fetch(\n      `${BASE_URL}/?q=${this.props.imageName}&page=${this.state.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json().then(data => data.hits);\n        }\n        return Promise.reject(\n          new Error(`No picture with name ${this.props.imageName}`),\n        );\n      })\n      .then(result => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...result],\n          page: prevState.page + 1,\n          status: 'resolved',\n        }));\n\n        if (!result.length) {\n          return Promise.reject(\n            new Error(` No picture with name  ${this.props.imageName}`),\n          );\n        } else {\n          this.setState({ error: null });\n        }\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      .finally(() => this.myScroll());\n  };\n  myScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  render() {\n    const { images, error, status } = this.state;\n\n    if (status === 'idle') {\n      return <div>Enter a name for the picture</div>;\n    }\n    if (status === 'pending') {\n      return (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      );\n    }\n    if (status === 'rejected') {\n      return <ImageError message={error.message} />;\n    }\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGallery images={images} largeImg={this.handlerClickImage} />\n          <Button onClick={this.fetchImage} />\n          {this.state.largeImg && (\n            <Modal\n              onClose={() => {\n                this.setState({ largeImg: null });\n              }}\n            >\n              <img src={this.state.largeImg} alt=\"\" />\n            </Modal>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nexport default ApiService;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss';\nimport Searchbar from '../Searchbar/Searchbar';\nimport ApiService from '../ApiService';\n\nexport class App extends Component {\n  state = {\n    imageName: [],\n  };\n\n  handleSearchFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\n        <ApiService imageName={this.state.imageName} />\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}